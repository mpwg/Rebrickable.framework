name: Performance

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 3 * * 0'  # Weekly on Sunday at 3 AM

jobs:
  performance-tests:
    name: Performance Tests
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
      
    - name: Clean DerivedData
      run: rm -rf ~/Library/Developer/Xcode/DerivedData
      
    - name: Build Framework
      run: |
        xcodebuild clean build \
          -project Rebrickable.framework.xcodeproj \
          -scheme "Rebrickable.framework" \
          -destination "platform=iOS Simulator,OS=26.0,name=iPhone 15 Pro" \
          -configuration Release \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO
          
    - name: Run Performance Tests
      run: |
        # Run tests with performance monitoring
        xcodebuild test \
          -project Rebrickable.framework.xcodeproj \
          -scheme "Rebrickable.framework" \
          -destination "platform=iOS Simulator,OS=26.0,name=iPhone 15 Pro" \
          -configuration Release \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          -test-timeouts-enabled YES \
          -maximum-test-execution-time-allowance 300 \
          | tee performance-test-results.txt
          
    - name: Extract Performance Metrics
      run: |
        # Extract timing information from test results
        grep -E "(Time|Duration|Performance)" performance-test-results.txt > performance-metrics.txt || true
        
        # Create performance summary
        echo "# Performance Test Summary" > performance-summary.md
        echo "" >> performance-summary.md
        echo "**Test Date:** $(date)" >> performance-summary.md
        echo "" >> performance-summary.md
        
        if [ -s performance-metrics.txt ]; then
          echo "## Performance Metrics" >> performance-summary.md
          echo "\`\`\`" >> performance-summary.md
          cat performance-metrics.txt >> performance-summary.md
          echo "\`\`\`" >> performance-summary.md
        else
          echo "No specific performance metrics found in test output." >> performance-summary.md
        fi
        
    - name: Upload Performance Results
      uses: actions/upload-artifact@v4
      with:
        name: performance-results
        path: |
          performance-test-results.txt
          performance-metrics.txt
          performance-summary.md
        retention-days: 90

  memory-leaks:
    name: Memory Leak Detection
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
      
    - name: Run Tests with Leaks Detection
      run: |
        # Enable additional memory debugging
        export MallocStackLogging=1
        export MallocScribble=1
        export MallocGuardEdges=1
        
        xcodebuild test \
          -project Rebrickable.framework.xcodeproj \
          -scheme "Rebrickable.framework" \
          -destination "platform=iOS Simulator,OS=26.0,name=iPhone 15 Pro" \
          -configuration Debug \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          -enableAddressSanitizer YES \
          | tee memory-test-results.txt 2>&1 || true
          
    - name: Check for Memory Issues
      run: |
        # Look for memory-related warnings and errors
        grep -i -E "(leak|memory|malloc|free|sanitizer)" memory-test-results.txt > memory-issues.txt || true
        
        echo "# Memory Analysis Report" > memory-report.md
        echo "" >> memory-report.md
        echo "**Analysis Date:** $(date)" >> memory-report.md
        echo "" >> memory-report.md
        
        if [ -s memory-issues.txt ]; then
          echo "## Potential Memory Issues Found" >> memory-report.md
          echo "\`\`\`" >> memory-report.md
          cat memory-issues.txt >> memory-report.md
          echo "\`\`\`" >> memory-report.md
          echo "" >> memory-report.md
          echo "⚠️ **Action Required:** Review and fix memory issues listed above." >> memory-report.md
        else
          echo "✅ **No memory issues detected** in the test run." >> memory-report.md
        fi
        
    - name: Upload Memory Analysis
      uses: actions/upload-artifact@v4
      with:
        name: memory-analysis
        path: |
          memory-test-results.txt
          memory-issues.txt
          memory-report.md
        retention-days: 90

  build-time-analysis:
    name: Build Time Analysis
    runs-on: macos-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable
      
    - name: Clean Build with Timing
      run: |
        # Record build start time
        BUILD_START=$(date +%s)
        
        # Clean build with detailed timing
        xcodebuild clean build \
          -project Rebrickable.framework.xcodeproj \
          -scheme "Rebrickable.framework" \
          -destination "platform=iOS Simulator,OS=26.0,name=iPhone 15 Pro" \
          -configuration Release \
          CODE_SIGN_IDENTITY="" \
          CODE_SIGNING_REQUIRED=NO \
          -showBuildTimingSummary \
          | tee build-timing.txt
          
        # Record build end time
        BUILD_END=$(date +%s)
        BUILD_DURATION=$((BUILD_END - BUILD_START))
        
        # Create build time report
        echo "# Build Time Analysis" > build-time-report.md
        echo "" >> build-time-report.md
        echo "**Build Date:** $(date)" >> build-time-report.md
        echo "**Total Build Time:** ${BUILD_DURATION} seconds" >> build-time-report.md
        echo "" >> build-time-report.md
        
        # Extract timing summary if available
        if grep -q "Build Timing Summary" build-timing.txt; then
          echo "## Detailed Timing" >> build-time-report.md
          echo "\`\`\`" >> build-time-report.md
          sed -n '/Build Timing Summary/,$p' build-timing.txt >> build-time-report.md
          echo "\`\`\`" >> build-time-report.md
        fi
        
    - name: Upload Build Analysis
      uses: actions/upload-artifact@v4
      with:
        name: build-analysis
        path: |
          build-timing.txt
          build-time-report.md
        retention-days: 90